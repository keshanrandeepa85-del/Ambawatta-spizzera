/* =========================================
   Ambawatta's Pizzeria - Admin Dashboard System
   ========================================= */

// =========================================================
// Global Variables (DOM elements outside of listener to be accessible by functions)
// =========================================================
const editModal = document.getElementById('edit-product-modal');
const editForm = document.getElementById('edit-product-form');
const closeEditModalBtn = document.getElementById('close-edit-modal');
// Initial Sample Data (‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂Ø‡∂≠‡∑ä‡∂≠) - Global Scope ‡∂ë‡∂ö‡∑ö ‡∂≠‡∑í‡∂∂‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í
let adminProducts = [
    { id: 1, name: "Signature Chicken Tikka", category: "Pizza", price: 2500, img: "chickentikka.jpg" },
    { id: 2, name: "Family Feast Package", category: "Package", price: 6500, img: "family.jpg" },
    { id: 3, name: "Cheesy Garlic Bread", category: "Sides", price: 850, img: "garlicbread.jpg" },
];
let adminOrders = [
    { id: "A1005", customer: "‡∂ö‡∑ö‡∑Ç‡∑è‡∂±‡∑ä", phone: "0771234567", items: "1 Chicken Tikka, 1 Fries", total: 3200, status: "Pending", payment: "COD" },
    { id: "A1004", customer: "‡∂ª‡∂±‡∑ä‡∂Ø‡∑ì‡∂¥", phone: "0719876543", items: "1 Seafood Delight", total: 2800, status: "Preparing", payment: "Card" },
    { id: "A1003", customer: "‡∂±‡∑í‡∂Ω‡∑ñ‡∂ö‡∑è", phone: "0771122334", items: "2 Margherita", total: 3600, status: "Out for Delivery", payment: "Bank" },
    { id: "A1002", customer: "‡∂Ø‡∑í‡∂±‡∑î‡∂ö", phone: "0774455667", items: "1 Family Feast", total: 6500, status: "Delivered", payment: "COD" },
];


document.addEventListener('DOMContentLoaded', () => {

    // Local Storage ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ø‡∂≠‡∑ä‡∂≠ Load ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (‡∂∏‡∑î‡∂Ω‡∑í‡∂±‡∑ä‡∂∏)
    const storedProducts = localStorage.getItem('adminProducts');
    if (storedProducts) {
        // Local Storage ‡∑Ñ‡∑í ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂≠‡∑í‡∂∂‡∑ö ‡∂±‡∂∏‡∑ä, ‡∂ë‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
        adminProducts = JSON.parse(storedProducts);
    } else {
        // ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠‡∑í ‡∂±‡∂∏‡∑ä, Sample Data Local Storage ‡∑Ñ‡∑í Save ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
        localStorage.setItem('adminProducts', JSON.stringify(adminProducts));
    }

    // --- 1. Element Selection & Initial Setup ---
    const navItems = document.querySelectorAll('.nav-item');
    const tabContents = document.querySelectorAll('.tab-content');
    
    // --- 2. Sidebar Navigation Switching ---
    navItems.forEach(item => {
        item.addEventListener('click', () => {
            navItems.forEach(i => i.classList.remove('active'));
            item.classList.add('active');

            const targetTab = item.dataset.tab;
            tabContents.forEach(content => {
                content.style.display = 'none';
                if (content.id === targetTab) {
                    content.style.display = 'block';
                }
            });

            // Load specific data when tabs are clicked
            if (targetTab === 'orders') {
                loadOrdersAdmin('Pending'); // Load Pending orders by default
            } else if (targetTab === 'products') {
                loadProductsAdmin();
            } else if (targetTab === 'settings') {
                initAdminMap(); // Delivery Zone Map
            }
        });
    });

    // --- 3. Orders Management Logic ---
    const filterBtns = document.querySelectorAll('.order-filter-bar .filter-btn');

    filterBtns.forEach(btn => {
        btn.addEventListener('click', (e) => {
            filterBtns.forEach(b => b.classList.remove('active'));
            e.target.classList.add('active');
            loadOrdersAdmin(e.target.dataset.status);
        });
    });

    function loadOrdersAdmin(status) {
        const ordersListElement = document.getElementById('orders-list-admin');
        ordersListElement.innerHTML = '';
        
        const filteredOrders = adminOrders.filter(order => order.status === status);

        if (filteredOrders.length === 0) {
            ordersListElement.innerHTML = '<div class="no-data-msg" style="text-align: center; padding: 50px;">‡∂∏‡∑ô‡∂∏ ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫‡∑ö ‡∂á‡∂´‡∑Ä‡∑î‡∂∏‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠.</div>';
            return;
        }

        filteredOrders.forEach(order => {
            const div = document.createElement('div');
            div.className = `order-item-admin ${order.status.toLowerCase().replace(/\s/g, '-')}`;
            div.innerHTML = `
                <div class="order-details-admin">
                    <p><strong>ID: ${order.id}</strong> | Total: LKR ${order.total.toFixed(2)}</p>
                    <p>Customer: ${order.customer} (${order.phone})</p>
                    <p>Items: ${order.items}</p>
                </div>
                <div class="order-actions-admin">
                    <select class="status-selector" data-order-id="${order.id}">
                        <option value="Pending" ${order.status === 'Pending' ? 'selected' : ''}>Pending (‡∂±‡∑Ä)</option>
                        <option value="Preparing" ${order.status === 'Preparing' ? 'selected' : ''}>Preparing (‡∑É‡∂ö‡∑É‡∑ä ‡∂ö‡∂ª‡∂±)</option>
                        <option value="Out for Delivery" ${order.status === 'Out for Delivery' ? 'selected' : ''}>Out for Delivery</option>
                        <option value="Delivered" ${order.status === 'Delivered' ? 'selected' : ''}>Delivered (‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä)</option>
                    </select>
                    <button class="btn-action view-order-btn" data-order-id="${order.id}"><i class="fas fa-eye"></i> View</button>
                </div>
            `;
            ordersListElement.appendChild(div);
        });
        
        // Status Change Event Listener
        ordersListElement.querySelectorAll('.status-selector').forEach(selector => {
            selector.addEventListener('change', (e) => {
                const orderId = e.target.dataset.orderId;
                const newStatus = e.target.value;
                updateOrderStatus(orderId, newStatus);
            });
        });
    }
    
    function updateOrderStatus(orderId, newStatus) {
        const orderIndex = adminOrders.findIndex(o => o.id === orderId);
        if (orderIndex > -1) {
            adminOrders[orderIndex].status = newStatus;
            alert(`Order ${orderId} ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫ '${newStatus}' ‡∂Ω‡∑ô‡∑É ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∑Ä‡∑í‡∂∫.`);
            // Reload the current view to show the change
            const activeStatus = document.querySelector('.filter-btn.active').dataset.status;
            loadOrdersAdmin(activeStatus); 
            // *‡∑É‡∑ê‡∂∂‡∑ë ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì Customer ‡∂ß Email/SMS ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫*
        }
    }


    // --- 4. Products Management Logic (‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø ‡∂ö‡∑ú‡∂ß‡∑É) ---
    window.loadProductsAdmin = function () { // Global function ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É define ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏.
        const tableBody = document.querySelector('#product-table tbody');
        tableBody.innerHTML = '';
        
        // Local Storage ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±
        const products = JSON.parse(localStorage.getItem('adminProducts')) || adminProducts;
        
        // ‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫ adminProducts ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        adminProducts = products;

        products.forEach(product => {
            const row = tableBody.insertRow();
            row.innerHTML = `
                <td>${product.id}</td>
                <td>${product.name}</td>
                <td>${product.category}</td>
                <td>LKR ${product.price.toFixed(2)}</td>
                <td>
                    <button class="btn-action edit-product-btn" onclick="editProduct(${product.id})"><i class="fas fa-edit"></i> Edit</button>
                    <button class="btn-action delete-product-btn" onclick="deleteProduct(${product.id})"><i class="fas fa-trash"></i> Delete</button>
                </td>
            `;
            // ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏: 'onclick' events ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì HTML ‡∂ë‡∂ö‡∂ß‡∂∏ ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö‡∑è üëÜ
        });
    }
    
    // --- 5. Content Management (‡∑É‡∑í‡∂∫‡∂Ω‡∑î ‡∑Ä‡∂†‡∂± ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫‡∑è‡∑Ä) ---
    document.querySelector('.update-content-btn').addEventListener('click', () => {
        const homepageTitle = document.getElementById('text-homepage-title').value;
        const cartBtnText = document.getElementById('text-cart-btn').value;
        const deliveryZoneText = document.getElementById('text-delivery-zone').value;
        const siteTitle = document.getElementById('text-site-title').value;
        
        // *‡∑É‡∑ê‡∂∂‡∑ë ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂∏‡∑ô‡∂∏ ‡∑É‡∑í‡∂∫‡∂Ω‡∑î data Server ‡∂ë‡∂ö‡∂ß ‡∂∫‡∑Ä‡∑è Database ‡∂ë‡∂ö‡∑ö Save ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫*
        
        alert(`‡∑Ä‡∑ô‡∂∂‡∑ä ‡∂Ö‡∂©‡∑Ä‡∑í‡∂∫‡∑ö ‡∑Ä‡∂†‡∂± ‡∑É‡∑î‡∂ª‡∑ê‡∂ö‡∑í‡∂´‡∑í!\n‡∂±‡∑Ä ‡∂∏‡∑è‡∂≠‡∑ò‡∂ö‡∑è‡∑Ä: ${homepageTitle}`);
        console.log("New Content Saved:", {homepageTitle, cartBtnText, deliveryZoneText, siteTitle});
    });


    // --- 6. Delivery Zone Management (Google Maps Admin) ---
    // *Google Maps API Key ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑ö*
    let adminMap, deliveryCircle;
    const defaultCenter = { lat: 6.095, lng: 80.345 };
    let currentRadius = 7000; // 7km

    window.initAdminMap = () => {
        const mapElement = document.getElementById('admin-map-zone');
        if (!mapElement || !window.google) return; // Google API ‡∂ë‡∂ö load ‡∑Ä‡∑ì ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠‡∑í ‡∂±‡∂∏‡∑ä ‡∂±‡∑Ä‡∂≠‡∑í‡∂±‡∑ä‡∂±

        adminMap = new google.maps.Map(mapElement, {
            center: defaultCenter,
            zoom: 13,
        });
        
        // Delivery Circle ‡∂ë‡∂ö ‡∂±‡∑í‡∂ª‡∑ä‡∂∏‡∑è‡∂´‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        deliveryCircle = new google.maps.Circle({
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.35,
            map: adminMap,
            center: defaultCenter,
            radius: currentRadius, // ‡∂∏‡∑ì‡∂ß‡∂ª ‡∑Ä‡∂Ω‡∑í‡∂±‡∑ä
            editable: true, // ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑è‡∂ß ‡∂á‡∂Ø‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è
            draggable: true
        });

        // Circle ‡∂ë‡∂ö‡∑ö ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∑Ä‡∑ñ ‡∑Ä‡∑í‡∂ß Update ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        deliveryCircle.addListener('center_changed', updateZoneInfo);
        deliveryCircle.addListener('radius_changed', updateZoneInfo);
    }
    
    function updateZoneInfo() {
        const center = deliveryCircle.getCenter();
        const radius = deliveryCircle.getRadius();
        
        document.getElementById('current-center').textContent = `${center.lat().toFixed(3)}, ${center.lng().toFixed(3)}`;
        document.getElementById('current-radius').textContent = `${(radius / 1000).toFixed(1)} km`;
        
        currentRadius = radius;
        // *‡∂∏‡∑ô‡∂∏ ‡∂±‡∑Ä Center ‡∑É‡∑Ñ Radius ‡∂Ø‡∂≠‡∑ä‡∂≠ Database ‡∂ë‡∂ö‡∂ß Save ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫*
    }

    // Zone Save Button
    document.querySelector('.update-settings-btn').addEventListener('click', () => {
        // ‡∑É‡∑ê‡∂∂‡∑ë ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í‡∂∫‡∑ö‡∂Ø‡∑ì, ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì ‡∂±‡∑Ä Center/Radius ‡∂Ø‡∂≠‡∑ä‡∂≠ Server ‡∂ë‡∂ö‡∂ß ‡∂∫‡∑Ä‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö
        alert(`‡∂±‡∑Ä Delivery Zone ‡∑É‡∑ì‡∂∏‡∑è‡∑Ä: ${(currentRadius / 1000).toFixed(1)} km ‡∂Ω‡∑ô‡∑É ‡∑É‡∑î‡∂ª‡∑ê‡∂ö‡∑í‡∂´‡∑í.`);
    });
    
    // --- Initial Dashboard Load ---
    document.getElementById('new-orders-count').textContent = adminOrders.filter(o => o.status === 'Pending').length;
    
    // Dashboad Overview ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î Load ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (Sample)

});

// =========================================================
// Global Functions - Admin Dashboard ‡∑Ñ‡∑í‡∂Ø‡∑ì ‡∂ï‡∂±‡∑ë‡∂∏ ‡∂≠‡∑ê‡∂±‡∂ö ‡∑É‡∑í‡∂ß ‡∂á‡∂∏‡∂≠‡∑ì‡∂∏‡∂ß (Call ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß)
// =========================================================

// Modal ‡∂ë‡∂ö ‡∑Ä‡∑É‡∂±‡∑ä‡∂±
if (closeEditModalBtn) {
    closeEditModalBtn.onclick = function() {
        editModal.style.display = 'none';
    };
}


// ---------------------------------------------------------
// PRODUCT DELETE FUNCTION
// ---------------------------------------------------------

window.deleteProduct = function(id) { // Global function ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É define ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    if (confirm(`‡∂î‡∂∂‡∂ß ID ${id} ‡∑É‡∑Ñ‡∑í‡∂≠ ‡∂∏‡∑ô‡∂∏ ‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∑É‡∑ä‡∂Æ‡∑í‡∂ª‡∑Ä‡∂∏ ‡∂∏‡∂ö‡∑è ‡∂Ø‡∑ê‡∂∏‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂Ø?`)) {
        // Local Storage ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä ‡∑É‡∑í‡∂∫‡∂Ω‡∑î products ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±
        let products = JSON.parse(localStorage.getItem('adminProducts')) || adminProducts;
        
        // Delete ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ product ‡∂ë‡∂ö ‡∑Ñ‡∑ê‡∂ª ‡∂Ö‡∂±‡∑ô‡∂ö‡∑î‡∂≠‡∑ä products ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∂±‡∑ä‡∂±
        let updatedProducts = products.filter(p => p.id !== id);
        
        // ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑Ö ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä Local Storage ‡∂ë‡∂ö‡∑ö Save ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        localStorage.setItem('adminProducts', JSON.stringify(updatedProducts));
        
        alert(`‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ID ${id} ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∏‡∂ö‡∑è ‡∂Ø‡∑ê‡∂∏‡∑í‡∂´‡∑í.`);
        
        // Product List ‡∂ë‡∂ö ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂¥‡∑ñ‡∂ª‡∂´‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        loadProductsAdmin(); 
    }
}


// ---------------------------------------------------------
// PRODUCT EDIT FUNCTION
// ---------------------------------------------------------

window.editProduct = function(id) { // Global function ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É define ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    let products = JSON.parse(localStorage.getItem('adminProducts')) || adminProducts;
    let productToEdit = products.find(p => p.id === id);

    if (productToEdit) {
        // 1. Modal ‡∂ë‡∂ö‡∑ö ‡∂ö‡∑ä‡∑Ç‡∑ö‡∂≠‡∑ä‚Äç‡∂ª ‡∑Ä‡∂Ω‡∂ß ‡∂Ø‡∑ê‡∂±‡∂ß ‡∂¥‡∑Ä‡∂≠‡∑í‡∂± ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂¥‡∑ñ‡∂ª‡∂´‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (Populate Form)
        document.getElementById('edit-product-id').value = productToEdit.id;
        document.getElementById('edit-product-name').value = productToEdit.name;
        document.getElementById('edit-product-category').value = productToEdit.category;
        document.getElementById('edit-product-price').value = productToEdit.price;
        document.getElementById('edit-product-img').value = productToEdit.img;
        
        // 2. Modal ‡∂ë‡∂ö ‡∂Ø‡∂ª‡∑ä‡∑Å‡∂±‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        editModal.style.display = 'block';
    }
}


// ---------------------------------------------------------
// Edit Form ‡∂ë‡∂ö Submit ‡∂ö‡∑Ö ‡∑Ä‡∑í‡∂ß ‡∂Ø‡∂≠‡∑ä‡∂≠ Save ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
// ---------------------------------------------------------

if (editForm) {
    editForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // 1. ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑Ö ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
        const id = parseInt(document.getElementById('edit-product-id').value);
        const newName = document.getElementById('edit-product-name').value;
        const newCategory = document.getElementById('edit-product-category').value;
        const newPrice = parseFloat(document.getElementById('edit-product-price').value);
        const newImg = document.getElementById('edit-product-img').value;

        let products = JSON.parse(localStorage.getItem('adminProducts')) || adminProducts;
        
        // 2. ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä‡∑ö ‡∂á‡∂≠‡∑í product ‡∂ë‡∂ö ‡∑É‡∑ú‡∂∫‡∑è‡∂ú‡∑ô‡∂± ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        const index = products.findIndex(p => p.id === id);
        if (index !== -1) {
            products[index].name = newName;
            products[index].category = newCategory;
            products[index].price = newPrice;
            products[index].img = newImg;
        }

        // 3. ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑Ö ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä Local Storage ‡∂ë‡∂ö‡∑ö Save ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        localStorage.setItem('adminProducts', JSON.stringify(products));
        
        alert(`‡∂±‡∑í‡∑Ç‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ID ${id} ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑í.`);

        // 4. Modal ‡∂ë‡∂ö ‡∑Ä‡∑É‡∑è, ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂¥‡∑ñ‡∂ª‡∂´‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        editModal.style.display = 'none';
        loadProductsAdmin(); // Product list ‡∂ë‡∂ö ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        
    });
}
